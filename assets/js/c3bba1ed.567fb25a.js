"use strict";(self.webpackChunk_lexical_website=self.webpackChunk_lexical_website||[]).push([["2817"],{48218:function(e,l,t){t.r(l),t.d(l,{frontMatter:()=>n,default:()=>x,contentTitle:()=>r,assets:()=>c,toc:()=>a,metadata:()=>s});var s=JSON.parse('{"id":"api/interfaces/lexical_utils.StateConfigWrapper","title":"Interface: StateConfigWrapper<K, V>","description":"@lexical/utils.StateConfigWrapper","source":"@site/docs/api/interfaces/lexical_utils.StateConfigWrapper.md","sourceDirName":"api/interfaces","slug":"/api/interfaces/lexical_utils.StateConfigWrapper","permalink":"/docs/api/interfaces/lexical_utils.StateConfigWrapper","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"lexical_utils.StateConfigWrapper","title":"Interface: StateConfigWrapper<K, V>","custom_edit_url":null},"sidebar":"api","previous":{"title":"DFSNode","permalink":"/docs/api/interfaces/lexical_utils.DFSNode"},"next":{"title":"Provider","permalink":"/docs/api/interfaces/lexical_yjs.Provider"}}'),i=t(52322),d=t(22840);let n={id:"lexical_utils.StateConfigWrapper",title:"Interface: StateConfigWrapper<K, V>",custom_edit_url:null},r=void 0,c={},a=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"$get",id:"get",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Type parameters",id:"type-parameters-1",level:5},{value:"Parameters",id:"parameters",level:5},{value:"Returns",id:"returns",level:5},{value:"Defined in",id:"defined-in",level:4},{value:"$set",id:"set",level:3},{value:"Type declaration",id:"type-declaration-1",level:4},{value:"Type parameters",id:"type-parameters-2",level:5},{value:"Parameters",id:"parameters-1",level:5},{value:"Returns",id:"returns-1",level:5},{value:"Defined in",id:"defined-in-1",level:4},{value:"accessors",id:"accessors",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"stateConfig",id:"stateconfig",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"Methods",id:"methods",level:2},{value:"makeGetterMethod",id:"makegettermethod",level:3},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Parameters",id:"parameters-2",level:5},{value:"Returns",id:"returns-3",level:5},{value:"Defined in",id:"defined-in-4",level:4},{value:"makeSetterMethod",id:"makesettermethod",level:3},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Parameters",id:"parameters-3",level:5},{value:"Returns",id:"returns-5",level:5},{value:"Defined in",id:"defined-in-5",level:4}];function h(e){let l={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.a,{href:"/docs/api/modules/lexical_utils",children:"@lexical/utils"}),".StateConfigWrapper"]}),"\n",(0,i.jsx)(l.p,{children:"A wrapper that creates bound functions and methods for the\nStateConfig to save some boilerplate when defining methods\nor exporting only the accessors from your modules rather\nthan exposing the StateConfig directly."}),"\n",(0,i.jsx)(l.h2,{id:"type-parameters",children:"Type parameters"}),"\n",(0,i.jsxs)(l.table,{children:[(0,i.jsx)(l.thead,{children:(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsxs)(l.tbody,{children:[(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.td,{style:{textAlign:"left"},children:(0,i.jsx)(l.code,{children:"K"})}),(0,i.jsxs)(l.td,{style:{textAlign:"left"},children:["extends ",(0,i.jsx)(l.code,{children:"string"})]})]}),(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.td,{style:{textAlign:"left"},children:(0,i.jsx)(l.code,{children:"V"})}),(0,i.jsx)(l.td,{style:{textAlign:"left"},children:(0,i.jsx)(l.code,{children:"V"})})]})]})]}),"\n",(0,i.jsx)(l.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(l.h3,{id:"get",children:"$get"}),"\n",(0,i.jsxs)(l.p,{children:["\u2022 ",(0,i.jsx)(l.code,{children:"Readonly"})," ",(0,i.jsx)(l.strong,{children:"$get"}),": <T>(",(0,i.jsx)(l.code,{children:"node"}),": ",(0,i.jsx)(l.code,{children:"T"}),") => ",(0,i.jsx)(l.code,{children:"V"})]}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.code,{children:"(node) => $getState(node, stateConfig)"})}),"\n",(0,i.jsx)(l.h4,{id:"type-declaration",children:"Type declaration"}),"\n",(0,i.jsxs)(l.p,{children:["\u25B8 <",(0,i.jsx)(l.code,{children:"T"}),">(",(0,i.jsx)(l.code,{children:"node"}),"): ",(0,i.jsx)(l.code,{children:"V"})]}),"\n",(0,i.jsx)(l.h5,{id:"type-parameters-1",children:"Type parameters"}),"\n",(0,i.jsxs)(l.table,{children:[(0,i.jsx)(l.thead,{children:(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(l.tbody,{children:(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.td,{style:{textAlign:"left"},children:(0,i.jsx)(l.code,{children:"T"})}),(0,i.jsxs)(l.td,{style:{textAlign:"left"},children:["extends ",(0,i.jsx)(l.a,{href:"/docs/api/classes/lexical.LexicalNode",children:(0,i.jsx)(l.code,{children:"LexicalNode"})})]})]})})]}),"\n",(0,i.jsx)(l.h5,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(l.table,{children:[(0,i.jsx)(l.thead,{children:(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(l.tbody,{children:(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.td,{style:{textAlign:"left"},children:(0,i.jsx)(l.code,{children:"node"})}),(0,i.jsx)(l.td,{style:{textAlign:"left"},children:(0,i.jsx)(l.code,{children:"T"})})]})})]}),"\n",(0,i.jsx)(l.h5,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.code,{children:"V"})}),"\n",(0,i.jsx)(l.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical-utils/src/index.ts#L914",children:"packages/lexical-utils/src/index.ts:914"})}),"\n",(0,i.jsx)(l.hr,{}),"\n",(0,i.jsx)(l.h3,{id:"set",children:"$set"}),"\n",(0,i.jsxs)(l.p,{children:["\u2022 ",(0,i.jsx)(l.code,{children:"Readonly"})," ",(0,i.jsx)(l.strong,{children:"$set"}),": <T>(",(0,i.jsx)(l.code,{children:"node"}),": ",(0,i.jsx)(l.code,{children:"T"}),", ",(0,i.jsx)(l.code,{children:"valueOrUpdater"}),": ",(0,i.jsx)(l.a,{href:"/docs/api/modules/lexical#valueorupdater",children:(0,i.jsx)(l.code,{children:"ValueOrUpdater"})}),"<",(0,i.jsx)(l.code,{children:"V"}),">) => ",(0,i.jsx)(l.code,{children:"T"})]}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.code,{children:"(node, valueOrUpdater) => $setState(node, stateConfig, valueOrUpdater)"})}),"\n",(0,i.jsx)(l.h4,{id:"type-declaration-1",children:"Type declaration"}),"\n",(0,i.jsxs)(l.p,{children:["\u25B8 <",(0,i.jsx)(l.code,{children:"T"}),">(",(0,i.jsx)(l.code,{children:"node"}),", ",(0,i.jsx)(l.code,{children:"valueOrUpdater"}),"): ",(0,i.jsx)(l.code,{children:"T"})]}),"\n",(0,i.jsx)(l.h5,{id:"type-parameters-2",children:"Type parameters"}),"\n",(0,i.jsxs)(l.table,{children:[(0,i.jsx)(l.thead,{children:(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(l.tbody,{children:(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.td,{style:{textAlign:"left"},children:(0,i.jsx)(l.code,{children:"T"})}),(0,i.jsxs)(l.td,{style:{textAlign:"left"},children:["extends ",(0,i.jsx)(l.a,{href:"/docs/api/classes/lexical.LexicalNode",children:(0,i.jsx)(l.code,{children:"LexicalNode"})})]})]})})]}),"\n",(0,i.jsx)(l.h5,{id:"parameters-1",children:"Parameters"}),"\n",(0,i.jsxs)(l.table,{children:[(0,i.jsx)(l.thead,{children:(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsxs)(l.tbody,{children:[(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.td,{style:{textAlign:"left"},children:(0,i.jsx)(l.code,{children:"node"})}),(0,i.jsx)(l.td,{style:{textAlign:"left"},children:(0,i.jsx)(l.code,{children:"T"})})]}),(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.td,{style:{textAlign:"left"},children:(0,i.jsx)(l.code,{children:"valueOrUpdater"})}),(0,i.jsxs)(l.td,{style:{textAlign:"left"},children:[(0,i.jsx)(l.a,{href:"/docs/api/modules/lexical#valueorupdater",children:(0,i.jsx)(l.code,{children:"ValueOrUpdater"})}),"<",(0,i.jsx)(l.code,{children:"V"}),">"]})]})]})]}),"\n",(0,i.jsx)(l.h5,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.code,{children:"T"})}),"\n",(0,i.jsx)(l.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical-utils/src/index.ts#L916",children:"packages/lexical-utils/src/index.ts:916"})}),"\n",(0,i.jsx)(l.hr,{}),"\n",(0,i.jsx)(l.h3,{id:"accessors",children:"accessors"}),"\n",(0,i.jsxs)(l.p,{children:["\u2022 ",(0,i.jsx)(l.code,{children:"Readonly"})," ",(0,i.jsx)(l.strong,{children:"accessors"}),": readonly [<T>(",(0,i.jsx)(l.code,{children:"node"}),": ",(0,i.jsx)(l.code,{children:"T"}),") => ",(0,i.jsx)(l.code,{children:"V"}),", <T>(",(0,i.jsx)(l.code,{children:"node"}),": ",(0,i.jsx)(l.code,{children:"T"}),", ",(0,i.jsx)(l.code,{children:"valueOrUpdater"}),": ",(0,i.jsx)(l.a,{href:"/docs/api/modules/lexical#valueorupdater",children:(0,i.jsx)(l.code,{children:"ValueOrUpdater"})}),"<",(0,i.jsx)(l.code,{children:"V"}),">) => ",(0,i.jsx)(l.code,{children:"T"}),"]"]}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.code,{children:"[$get, $set]"})}),"\n",(0,i.jsx)(l.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical-utils/src/index.ts#L921",children:"packages/lexical-utils/src/index.ts:921"})}),"\n",(0,i.jsx)(l.hr,{}),"\n",(0,i.jsx)(l.h3,{id:"stateconfig",children:"stateConfig"}),"\n",(0,i.jsxs)(l.p,{children:["\u2022 ",(0,i.jsx)(l.code,{children:"Readonly"})," ",(0,i.jsx)(l.strong,{children:"stateConfig"}),": ",(0,i.jsx)(l.a,{href:"/docs/api/classes/lexical.StateConfig",children:(0,i.jsx)(l.code,{children:"StateConfig"})}),"<",(0,i.jsx)(l.code,{children:"K"}),", ",(0,i.jsx)(l.code,{children:"V"}),">"]}),"\n",(0,i.jsx)(l.p,{children:"A reference to the stateConfig"}),"\n",(0,i.jsx)(l.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical-utils/src/index.ts#L912",children:"packages/lexical-utils/src/index.ts:912"})}),"\n",(0,i.jsx)(l.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(l.h3,{id:"makegettermethod",children:"makeGetterMethod"}),"\n",(0,i.jsxs)(l.p,{children:["\u25B8 ",(0,i.jsx)(l.strong,{children:"makeGetterMethod"}),"<",(0,i.jsx)(l.code,{children:"T"}),">(): (",(0,i.jsx)(l.code,{children:"this"}),": ",(0,i.jsx)(l.code,{children:"T"}),") => ",(0,i.jsx)(l.code,{children:"V"})]}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.code,{children:"() => function () { return $get(this) }"})}),"\n",(0,i.jsxs)(l.p,{children:["Should be called with an explicit ",(0,i.jsx)(l.code,{children:"this"})," type parameter."]}),"\n",(0,i.jsx)(l.h4,{id:"type-parameters-3",children:"Type parameters"}),"\n",(0,i.jsxs)(l.table,{children:[(0,i.jsx)(l.thead,{children:(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(l.tbody,{children:(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.td,{style:{textAlign:"left"},children:(0,i.jsx)(l.code,{children:"T"})}),(0,i.jsxs)(l.td,{style:{textAlign:"left"},children:["extends ",(0,i.jsx)(l.a,{href:"/docs/api/classes/lexical.LexicalNode",children:(0,i.jsx)(l.code,{children:"LexicalNode"})})]})]})})]}),"\n",(0,i.jsx)(l.h4,{id:"returns-2",children:"Returns"}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.code,{children:"fn"})}),"\n",(0,i.jsxs)(l.p,{children:["\u25B8 (",(0,i.jsx)(l.code,{children:"this"}),"): ",(0,i.jsx)(l.code,{children:"V"})]}),"\n",(0,i.jsx)(l.h5,{id:"parameters-2",children:"Parameters"}),"\n",(0,i.jsxs)(l.table,{children:[(0,i.jsx)(l.thead,{children:(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(l.tbody,{children:(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.td,{style:{textAlign:"left"},children:(0,i.jsx)(l.code,{children:"this"})}),(0,i.jsx)(l.td,{style:{textAlign:"left"},children:(0,i.jsx)(l.code,{children:"T"})})]})})]}),"\n",(0,i.jsx)(l.h5,{id:"returns-3",children:"Returns"}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.code,{children:"V"})}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.strong,{children:(0,i.jsx)(l.code,{children:"Example"})})}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-ts",children:"class MyNode {\n  // \u2026\n  myGetter = myWrapper.makeGetterMethod<this>();\n}\n"})}),"\n",(0,i.jsx)(l.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical-utils/src/index.ts#L935",children:"packages/lexical-utils/src/index.ts:935"})}),"\n",(0,i.jsx)(l.hr,{}),"\n",(0,i.jsx)(l.h3,{id:"makesettermethod",children:"makeSetterMethod"}),"\n",(0,i.jsxs)(l.p,{children:["\u25B8 ",(0,i.jsx)(l.strong,{children:"makeSetterMethod"}),"<",(0,i.jsx)(l.code,{children:"T"}),">(): (",(0,i.jsx)(l.code,{children:"this"}),": ",(0,i.jsx)(l.code,{children:"T"}),", ",(0,i.jsx)(l.code,{children:"valueOrUpdater"}),": ",(0,i.jsx)(l.a,{href:"/docs/api/modules/lexical#valueorupdater",children:(0,i.jsx)(l.code,{children:"ValueOrUpdater"})}),"<",(0,i.jsx)(l.code,{children:"V"}),">) => ",(0,i.jsx)(l.code,{children:"T"})]}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.code,{children:"() => function (valueOrUpdater) { return $set(this, valueOrUpdater) }"})}),"\n",(0,i.jsxs)(l.p,{children:["Must be called with an explicit ",(0,i.jsx)(l.code,{children:"this"})," type parameter."]}),"\n",(0,i.jsx)(l.h4,{id:"type-parameters-4",children:"Type parameters"}),"\n",(0,i.jsxs)(l.table,{children:[(0,i.jsx)(l.thead,{children:(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(l.tbody,{children:(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.td,{style:{textAlign:"left"},children:(0,i.jsx)(l.code,{children:"T"})}),(0,i.jsxs)(l.td,{style:{textAlign:"left"},children:["extends ",(0,i.jsx)(l.a,{href:"/docs/api/classes/lexical.LexicalNode",children:(0,i.jsx)(l.code,{children:"LexicalNode"})})]})]})})]}),"\n",(0,i.jsx)(l.h4,{id:"returns-4",children:"Returns"}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.code,{children:"fn"})}),"\n",(0,i.jsxs)(l.p,{children:["\u25B8 (",(0,i.jsx)(l.code,{children:"this"}),", ",(0,i.jsx)(l.code,{children:"valueOrUpdater"}),"): ",(0,i.jsx)(l.code,{children:"T"})]}),"\n",(0,i.jsx)(l.h5,{id:"parameters-3",children:"Parameters"}),"\n",(0,i.jsxs)(l.table,{children:[(0,i.jsx)(l.thead,{children:(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsxs)(l.tbody,{children:[(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.td,{style:{textAlign:"left"},children:(0,i.jsx)(l.code,{children:"this"})}),(0,i.jsx)(l.td,{style:{textAlign:"left"},children:(0,i.jsx)(l.code,{children:"T"})})]}),(0,i.jsxs)(l.tr,{children:[(0,i.jsx)(l.td,{style:{textAlign:"left"},children:(0,i.jsx)(l.code,{children:"valueOrUpdater"})}),(0,i.jsxs)(l.td,{style:{textAlign:"left"},children:[(0,i.jsx)(l.a,{href:"/docs/api/modules/lexical#valueorupdater",children:(0,i.jsx)(l.code,{children:"ValueOrUpdater"})}),"<",(0,i.jsx)(l.code,{children:"V"}),">"]})]})]})]}),"\n",(0,i.jsx)(l.h5,{id:"returns-5",children:"Returns"}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.code,{children:"T"})}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.strong,{children:(0,i.jsx)(l.code,{children:"Example"})})}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-ts",children:"class MyNode {\n  // \u2026\n  mySetter = myWrapper.makeSetterMethod<this>();\n}\n"})}),"\n",(0,i.jsx)(l.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,i.jsx)(l.p,{children:(0,i.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical-utils/src/index.ts#L949",children:"packages/lexical-utils/src/index.ts:949"})})]})}function x(e={}){let{wrapper:l}={...(0,d.a)(),...e.components};return l?(0,i.jsx)(l,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},22840:function(e,l,t){t.d(l,{Z:()=>r,a:()=>n});var s=t(2784);let i={},d=s.createContext(i);function n(e){let l=s.useContext(d);return s.useMemo(function(){return"function"==typeof e?e(l):{...l,...e}},[l,e])}function r(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:n(e.components),s.createElement(d.Provider,{value:l},e.children)}}}]);