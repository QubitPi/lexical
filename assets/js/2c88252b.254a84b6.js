"use strict";(self.webpackChunk_lexical_website=self.webpackChunk_lexical_website||[]).push([["2827"],{51594:function(e,i,l){l.r(i),l.d(i,{frontMatter:()=>s,default:()=>x,contentTitle:()=>r,assets:()=>c,toc:()=>a,metadata:()=>n});var n=JSON.parse('{"id":"api/modules/lexical_link","title":"Module: @lexical/link","description":"Classes","source":"@site/docs/api/modules/lexical_link.md","sourceDirName":"api/modules","slug":"/api/modules/lexical_link","permalink":"/docs/api/modules/lexical_link","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"lexical_link","title":"Module: @lexical/link","custom_edit_url":null},"sidebar":"api","previous":{"title":"@lexical/html","permalink":"/docs/api/modules/lexical_html"},"next":{"title":"@lexical/list","permalink":"/docs/api/modules/lexical_list"}}'),d=l(52322),t=l(22840);let s={id:"lexical_link",title:"Module: @lexical/link",custom_edit_url:null},r=void 0,c={},a=[{value:"Classes",id:"classes",level:2},{value:"Type Aliases",id:"type-aliases",level:2},{value:"AutoLinkAttributes",id:"autolinkattributes",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"LinkAttributes",id:"linkattributes",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"SerializedAutoLinkNode",id:"serializedautolinknode",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"SerializedLinkNode",id:"serializedlinknode",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"Variables",id:"variables",level:2},{value:"TOGGLE_LINK_COMMAND",id:"toggle_link_command",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"Functions",id:"functions",level:2},{value:"$createAutoLinkNode",id:"createautolinknode",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"$createLinkNode",id:"createlinknode",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"$isAutoLinkNode",id:"isautolinknode",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"$isLinkNode",id:"islinknode",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"$toggleLink",id:"togglelink",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"formatUrl",id:"formaturl",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"toggleLink",id:"togglelink-1",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-11",level:4}];function h(e){let i={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(i.h2,{id:"classes",children:"Classes"}),"\n",(0,d.jsxs)(i.ul,{children:["\n",(0,d.jsx)(i.li,{children:(0,d.jsx)(i.a,{href:"/docs/api/classes/lexical_link.AutoLinkNode",children:"AutoLinkNode"})}),"\n",(0,d.jsx)(i.li,{children:(0,d.jsx)(i.a,{href:"/docs/api/classes/lexical_link.LinkNode",children:"LinkNode"})}),"\n"]}),"\n",(0,d.jsx)(i.h2,{id:"type-aliases",children:"Type Aliases"}),"\n",(0,d.jsx)(i.h3,{id:"autolinkattributes",children:"AutoLinkAttributes"}),"\n",(0,d.jsxs)(i.p,{children:["\u01AC ",(0,d.jsx)(i.strong,{children:"AutoLinkAttributes"}),": ",(0,d.jsx)(i.code,{children:"Partial"}),"<",(0,d.jsx)(i.a,{href:"/docs/api/modules/lexical#spread",children:(0,d.jsx)(i.code,{children:"Spread"})}),"<",(0,d.jsx)(i.a,{href:"/docs/api/modules/lexical_link#linkattributes",children:(0,d.jsx)(i.code,{children:"LinkAttributes"})}),", { ",(0,d.jsx)(i.code,{children:"isUnlinked?"}),": ",(0,d.jsx)(i.code,{children:"boolean"}),"  }>>"]}),"\n",(0,d.jsx)(i.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,d.jsx)(i.p,{children:(0,d.jsx)(i.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical-link/src/index.ts#L48",children:"packages/lexical-link/src/index.ts:48"})}),"\n",(0,d.jsx)(i.hr,{}),"\n",(0,d.jsx)(i.h3,{id:"linkattributes",children:"LinkAttributes"}),"\n",(0,d.jsxs)(i.p,{children:["\u01AC ",(0,d.jsx)(i.strong,{children:"LinkAttributes"}),": ",(0,d.jsx)(i.code,{children:"Object"})]}),"\n",(0,d.jsx)(i.h4,{id:"type-declaration",children:"Type declaration"}),"\n",(0,d.jsxs)(i.table,{children:[(0,d.jsx)(i.thead,{children:(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(i.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,d.jsxs)(i.tbody,{children:[(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.td,{style:{textAlign:"left"},children:(0,d.jsx)(i.code,{children:"rel?"})}),(0,d.jsxs)(i.td,{style:{textAlign:"left"},children:[(0,d.jsx)(i.code,{children:"null"})," | ",(0,d.jsx)(i.code,{children:"string"})]})]}),(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.td,{style:{textAlign:"left"},children:(0,d.jsx)(i.code,{children:"target?"})}),(0,d.jsxs)(i.td,{style:{textAlign:"left"},children:[(0,d.jsx)(i.code,{children:"null"})," | ",(0,d.jsx)(i.code,{children:"string"})]})]}),(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.td,{style:{textAlign:"left"},children:(0,d.jsx)(i.code,{children:"title?"})}),(0,d.jsxs)(i.td,{style:{textAlign:"left"},children:[(0,d.jsx)(i.code,{children:"null"})," | ",(0,d.jsx)(i.code,{children:"string"})]})]})]})]}),"\n",(0,d.jsx)(i.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,d.jsx)(i.p,{children:(0,d.jsx)(i.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical-link/src/index.ts#L42",children:"packages/lexical-link/src/index.ts:42"})}),"\n",(0,d.jsx)(i.hr,{}),"\n",(0,d.jsx)(i.h3,{id:"serializedautolinknode",children:"SerializedAutoLinkNode"}),"\n",(0,d.jsxs)(i.p,{children:["\u01AC ",(0,d.jsx)(i.strong,{children:"SerializedAutoLinkNode"}),": ",(0,d.jsx)(i.a,{href:"/docs/api/modules/lexical#spread",children:(0,d.jsx)(i.code,{children:"Spread"})}),"<{ ",(0,d.jsx)(i.code,{children:"isUnlinked"}),": ",(0,d.jsx)(i.code,{children:"boolean"}),"  }, ",(0,d.jsx)(i.a,{href:"/docs/api/modules/lexical_link#serializedlinknode",children:(0,d.jsx)(i.code,{children:"SerializedLinkNode"})}),">"]}),"\n",(0,d.jsx)(i.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,d.jsx)(i.p,{children:(0,d.jsx)(i.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical-link/src/index.ts#L328",children:"packages/lexical-link/src/index.ts:328"})}),"\n",(0,d.jsx)(i.hr,{}),"\n",(0,d.jsx)(i.h3,{id:"serializedlinknode",children:"SerializedLinkNode"}),"\n",(0,d.jsxs)(i.p,{children:["\u01AC ",(0,d.jsx)(i.strong,{children:"SerializedLinkNode"}),": ",(0,d.jsx)(i.a,{href:"/docs/api/modules/lexical#spread",children:(0,d.jsx)(i.code,{children:"Spread"})}),"<{ ",(0,d.jsx)(i.code,{children:"url"}),": ",(0,d.jsx)(i.code,{children:"string"}),"  }, ",(0,d.jsx)(i.a,{href:"/docs/api/modules/lexical#spread",children:(0,d.jsx)(i.code,{children:"Spread"})}),"<",(0,d.jsx)(i.a,{href:"/docs/api/modules/lexical_link#linkattributes",children:(0,d.jsx)(i.code,{children:"LinkAttributes"})}),", ",(0,d.jsx)(i.a,{href:"/docs/api/modules/lexical#serializedelementnode",children:(0,d.jsx)(i.code,{children:"SerializedElementNode"})}),">>"]}),"\n",(0,d.jsx)(i.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,d.jsx)(i.p,{children:(0,d.jsx)(i.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical-link/src/index.ts#L52",children:"packages/lexical-link/src/index.ts:52"})}),"\n",(0,d.jsx)(i.h2,{id:"variables",children:"Variables"}),"\n",(0,d.jsx)(i.h3,{id:"toggle_link_command",children:"TOGGLE_LINK_COMMAND"}),"\n",(0,d.jsxs)(i.p,{children:["\u2022 ",(0,d.jsx)(i.code,{children:"Const"})," ",(0,d.jsx)(i.strong,{children:"TOGGLE_LINK_COMMAND"}),": ",(0,d.jsx)(i.a,{href:"/docs/api/modules/lexical#lexicalcommand",children:(0,d.jsx)(i.code,{children:"LexicalCommand"})}),"<",(0,d.jsx)(i.code,{children:"string"})," | { ",(0,d.jsx)(i.code,{children:"url"}),": ",(0,d.jsx)(i.code,{children:"string"}),"  } & ",(0,d.jsx)(i.a,{href:"/docs/api/modules/lexical_link#linkattributes",children:(0,d.jsx)(i.code,{children:"LinkAttributes"})})," | ",(0,d.jsx)(i.code,{children:"null"}),">"]}),"\n",(0,d.jsx)(i.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,d.jsx)(i.p,{children:(0,d.jsx)(i.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical-link/src/index.ts#L471",children:"packages/lexical-link/src/index.ts:471"})}),"\n",(0,d.jsx)(i.h2,{id:"functions",children:"Functions"}),"\n",(0,d.jsx)(i.h3,{id:"createautolinknode",children:"$createAutoLinkNode"}),"\n",(0,d.jsxs)(i.p,{children:["\u25B8 ",(0,d.jsx)(i.strong,{children:"$createAutoLinkNode"}),"(",(0,d.jsx)(i.code,{children:"url?"}),", ",(0,d.jsx)(i.code,{children:"attributes?"}),"): ",(0,d.jsx)(i.a,{href:"/docs/api/classes/lexical_link.AutoLinkNode",children:(0,d.jsx)(i.code,{children:"AutoLinkNode"})})]}),"\n",(0,d.jsx)(i.p,{children:"Takes a URL and creates an AutoLinkNode. AutoLinkNodes are generally automatically generated\nduring typing, which is especially useful when a button to generate a LinkNode is not practical."}),"\n",(0,d.jsx)(i.h4,{id:"parameters",children:"Parameters"}),"\n",(0,d.jsxs)(i.table,{children:[(0,d.jsx)(i.thead,{children:(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(i.th,{style:{textAlign:"left"},children:"Type"}),(0,d.jsx)(i.th,{style:{textAlign:"left"},children:"Default value"}),(0,d.jsx)(i.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,d.jsxs)(i.tbody,{children:[(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.td,{style:{textAlign:"left"},children:(0,d.jsx)(i.code,{children:"url"})}),(0,d.jsx)(i.td,{style:{textAlign:"left"},children:(0,d.jsx)(i.code,{children:"string"})}),(0,d.jsx)(i.td,{style:{textAlign:"left"},children:(0,d.jsx)(i.code,{children:"''"})}),(0,d.jsx)(i.td,{style:{textAlign:"left"},children:"The URL the LinkNode should direct to."})]}),(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.td,{style:{textAlign:"left"},children:(0,d.jsx)(i.code,{children:"attributes?"})}),(0,d.jsxs)(i.td,{style:{textAlign:"left"},children:[(0,d.jsx)(i.code,{children:"Partial"}),"<",(0,d.jsx)(i.a,{href:"/docs/api/modules/lexical#spread",children:(0,d.jsx)(i.code,{children:"Spread"})}),"<",(0,d.jsx)(i.a,{href:"/docs/api/modules/lexical_link#linkattributes",children:(0,d.jsx)(i.code,{children:"LinkAttributes"})}),", { ",(0,d.jsx)(i.code,{children:"isUnlinked?"}),": ",(0,d.jsx)(i.code,{children:"boolean"}),"  }>>"]}),(0,d.jsx)(i.td,{style:{textAlign:"left"},children:(0,d.jsx)(i.code,{children:"undefined"})}),(0,d.jsx)(i.td,{style:{textAlign:"left"},children:"Optional HTML a tag attributes. { target, rel, title }"})]})]})]}),"\n",(0,d.jsx)(i.h4,{id:"returns",children:"Returns"}),"\n",(0,d.jsx)(i.p,{children:(0,d.jsx)(i.a,{href:"/docs/api/classes/lexical_link.AutoLinkNode",children:(0,d.jsx)(i.code,{children:"AutoLinkNode"})})}),"\n",(0,d.jsx)(i.p,{children:"The LinkNode."}),"\n",(0,d.jsx)(i.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,d.jsx)(i.p,{children:(0,d.jsx)(i.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical-link/src/index.ts#L453",children:"packages/lexical-link/src/index.ts:453"})}),"\n",(0,d.jsx)(i.hr,{}),"\n",(0,d.jsx)(i.h3,{id:"createlinknode",children:"$createLinkNode"}),"\n",(0,d.jsxs)(i.p,{children:["\u25B8 ",(0,d.jsx)(i.strong,{children:"$createLinkNode"}),"(",(0,d.jsx)(i.code,{children:"url?"}),", ",(0,d.jsx)(i.code,{children:"attributes?"}),"): ",(0,d.jsx)(i.a,{href:"/docs/api/classes/lexical_link.LinkNode",children:(0,d.jsx)(i.code,{children:"LinkNode"})})]}),"\n",(0,d.jsx)(i.p,{children:"Takes a URL and creates a LinkNode."}),"\n",(0,d.jsx)(i.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,d.jsxs)(i.table,{children:[(0,d.jsx)(i.thead,{children:(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(i.th,{style:{textAlign:"left"},children:"Type"}),(0,d.jsx)(i.th,{style:{textAlign:"left"},children:"Default value"}),(0,d.jsx)(i.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,d.jsxs)(i.tbody,{children:[(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.td,{style:{textAlign:"left"},children:(0,d.jsx)(i.code,{children:"url"})}),(0,d.jsx)(i.td,{style:{textAlign:"left"},children:(0,d.jsx)(i.code,{children:"string"})}),(0,d.jsx)(i.td,{style:{textAlign:"left"},children:(0,d.jsx)(i.code,{children:"''"})}),(0,d.jsx)(i.td,{style:{textAlign:"left"},children:"The URL the LinkNode should direct to."})]}),(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.td,{style:{textAlign:"left"},children:(0,d.jsx)(i.code,{children:"attributes?"})}),(0,d.jsx)(i.td,{style:{textAlign:"left"},children:(0,d.jsx)(i.a,{href:"/docs/api/modules/lexical_link#linkattributes",children:(0,d.jsx)(i.code,{children:"LinkAttributes"})})}),(0,d.jsx)(i.td,{style:{textAlign:"left"},children:(0,d.jsx)(i.code,{children:"undefined"})}),(0,d.jsx)(i.td,{style:{textAlign:"left"},children:"Optional HTML a tag attributes { target, rel, title }"})]})]})]}),"\n",(0,d.jsx)(i.h4,{id:"returns-1",children:"Returns"}),"\n",(0,d.jsx)(i.p,{children:(0,d.jsx)(i.a,{href:"/docs/api/classes/lexical_link.LinkNode",children:(0,d.jsx)(i.code,{children:"LinkNode"})})}),"\n",(0,d.jsx)(i.p,{children:"The LinkNode."}),"\n",(0,d.jsx)(i.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,d.jsx)(i.p,{children:(0,d.jsx)(i.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical-link/src/index.ts#L310",children:"packages/lexical-link/src/index.ts:310"})}),"\n",(0,d.jsx)(i.hr,{}),"\n",(0,d.jsx)(i.h3,{id:"isautolinknode",children:"$isAutoLinkNode"}),"\n",(0,d.jsxs)(i.p,{children:["\u25B8 ",(0,d.jsx)(i.strong,{children:"$isAutoLinkNode"}),"(",(0,d.jsx)(i.code,{children:"node"}),"): node is AutoLinkNode"]}),"\n",(0,d.jsx)(i.p,{children:"Determines if node is an AutoLinkNode."}),"\n",(0,d.jsx)(i.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,d.jsxs)(i.table,{children:[(0,d.jsx)(i.thead,{children:(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(i.th,{style:{textAlign:"left"},children:"Type"}),(0,d.jsx)(i.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,d.jsx)(i.tbody,{children:(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.td,{style:{textAlign:"left"},children:(0,d.jsx)(i.code,{children:"node"})}),(0,d.jsxs)(i.td,{style:{textAlign:"left"},children:[(0,d.jsx)(i.code,{children:"undefined"})," | ",(0,d.jsx)(i.code,{children:"null"})," | ",(0,d.jsx)(i.a,{href:"/docs/api/classes/lexical.LexicalNode",children:(0,d.jsx)(i.code,{children:"LexicalNode"})})]}),(0,d.jsx)(i.td,{style:{textAlign:"left"},children:"The node to be checked."})]})})]}),"\n",(0,d.jsx)(i.h4,{id:"returns-2",children:"Returns"}),"\n",(0,d.jsx)(i.p,{children:"node is AutoLinkNode"}),"\n",(0,d.jsx)(i.p,{children:"true if node is an AutoLinkNode, false otherwise."}),"\n",(0,d.jsx)(i.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,d.jsx)(i.p,{children:(0,d.jsx)(i.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical-link/src/index.ts#L465",children:"packages/lexical-link/src/index.ts:465"})}),"\n",(0,d.jsx)(i.hr,{}),"\n",(0,d.jsx)(i.h3,{id:"islinknode",children:"$isLinkNode"}),"\n",(0,d.jsxs)(i.p,{children:["\u25B8 ",(0,d.jsx)(i.strong,{children:"$isLinkNode"}),"(",(0,d.jsx)(i.code,{children:"node"}),"): node is LinkNode"]}),"\n",(0,d.jsx)(i.p,{children:"Determines if node is a LinkNode."}),"\n",(0,d.jsx)(i.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,d.jsxs)(i.table,{children:[(0,d.jsx)(i.thead,{children:(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(i.th,{style:{textAlign:"left"},children:"Type"}),(0,d.jsx)(i.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,d.jsx)(i.tbody,{children:(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.td,{style:{textAlign:"left"},children:(0,d.jsx)(i.code,{children:"node"})}),(0,d.jsxs)(i.td,{style:{textAlign:"left"},children:[(0,d.jsx)(i.code,{children:"undefined"})," | ",(0,d.jsx)(i.code,{children:"null"})," | ",(0,d.jsx)(i.a,{href:"/docs/api/classes/lexical.LexicalNode",children:(0,d.jsx)(i.code,{children:"LexicalNode"})})]}),(0,d.jsx)(i.td,{style:{textAlign:"left"},children:"The node to be checked."})]})})]}),"\n",(0,d.jsx)(i.h4,{id:"returns-3",children:"Returns"}),"\n",(0,d.jsx)(i.p,{children:"node is LinkNode"}),"\n",(0,d.jsx)(i.p,{children:"true if node is a LinkNode, false otherwise."}),"\n",(0,d.jsx)(i.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,d.jsx)(i.p,{children:(0,d.jsx)(i.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical-link/src/index.ts#L322",children:"packages/lexical-link/src/index.ts:322"})}),"\n",(0,d.jsx)(i.hr,{}),"\n",(0,d.jsx)(i.h3,{id:"togglelink",children:"$toggleLink"}),"\n",(0,d.jsxs)(i.p,{children:["\u25B8 ",(0,d.jsx)(i.strong,{children:"$toggleLink"}),"(",(0,d.jsx)(i.code,{children:"url"}),", ",(0,d.jsx)(i.code,{children:"attributes?"}),"): ",(0,d.jsx)(i.code,{children:"void"})]}),"\n",(0,d.jsx)(i.p,{children:"Generates or updates a LinkNode. It can also delete a LinkNode if the URL is null,\nbut saves any children and brings them up to the parent node."}),"\n",(0,d.jsx)(i.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,d.jsxs)(i.table,{children:[(0,d.jsx)(i.thead,{children:(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(i.th,{style:{textAlign:"left"},children:"Type"}),(0,d.jsx)(i.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,d.jsxs)(i.tbody,{children:[(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.td,{style:{textAlign:"left"},children:(0,d.jsx)(i.code,{children:"url"})}),(0,d.jsxs)(i.td,{style:{textAlign:"left"},children:[(0,d.jsx)(i.code,{children:"null"})," | ",(0,d.jsx)(i.code,{children:"string"})]}),(0,d.jsx)(i.td,{style:{textAlign:"left"},children:"The URL the link directs to."})]}),(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.td,{style:{textAlign:"left"},children:(0,d.jsx)(i.code,{children:"attributes"})}),(0,d.jsx)(i.td,{style:{textAlign:"left"},children:(0,d.jsx)(i.a,{href:"/docs/api/modules/lexical_link#linkattributes",children:(0,d.jsx)(i.code,{children:"LinkAttributes"})})}),(0,d.jsx)(i.td,{style:{textAlign:"left"},children:"Optional HTML a tag attributes. { target, rel, title }"})]})]})]}),"\n",(0,d.jsx)(i.h4,{id:"returns-4",children:"Returns"}),"\n",(0,d.jsx)(i.p,{children:(0,d.jsx)(i.code,{children:"void"})}),"\n",(0,d.jsx)(i.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,d.jsx)(i.p,{children:(0,d.jsx)(i.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical-link/src/index.ts#L541",children:"packages/lexical-link/src/index.ts:541"})}),"\n",(0,d.jsx)(i.hr,{}),"\n",(0,d.jsx)(i.h3,{id:"formaturl",children:"formatUrl"}),"\n",(0,d.jsxs)(i.p,{children:["\u25B8 ",(0,d.jsx)(i.strong,{children:"formatUrl"}),"(",(0,d.jsx)(i.code,{children:"url"}),"): ",(0,d.jsx)(i.code,{children:"string"})]}),"\n",(0,d.jsx)(i.p,{children:"Formats a URL string by adding appropriate protocol if missing"}),"\n",(0,d.jsx)(i.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,d.jsxs)(i.table,{children:[(0,d.jsx)(i.thead,{children:(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(i.th,{style:{textAlign:"left"},children:"Type"}),(0,d.jsx)(i.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,d.jsx)(i.tbody,{children:(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.td,{style:{textAlign:"left"},children:(0,d.jsx)(i.code,{children:"url"})}),(0,d.jsx)(i.td,{style:{textAlign:"left"},children:(0,d.jsx)(i.code,{children:"string"})}),(0,d.jsx)(i.td,{style:{textAlign:"left"},children:"URL to format"})]})})]}),"\n",(0,d.jsx)(i.h4,{id:"returns-5",children:"Returns"}),"\n",(0,d.jsx)(i.p,{children:(0,d.jsx)(i.code,{children:"string"})}),"\n",(0,d.jsx)(i.p,{children:"Formatted URL with appropriate protocol"}),"\n",(0,d.jsx)(i.h4,{id:"defined-in-10",children:"Defined in"}),"\n",(0,d.jsx)(i.p,{children:(0,d.jsx)(i.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical-link/src/index.ts#L723",children:"packages/lexical-link/src/index.ts:723"})}),"\n",(0,d.jsx)(i.hr,{}),"\n",(0,d.jsx)(i.h3,{id:"togglelink-1",children:"toggleLink"}),"\n",(0,d.jsxs)(i.p,{children:["\u25B8 ",(0,d.jsx)(i.strong,{children:"toggleLink"}),"(",(0,d.jsx)(i.code,{children:"url"}),", ",(0,d.jsx)(i.code,{children:"attributes?"}),"): ",(0,d.jsx)(i.code,{children:"void"})]}),"\n",(0,d.jsx)(i.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,d.jsxs)(i.table,{children:[(0,d.jsx)(i.thead,{children:(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(i.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,d.jsxs)(i.tbody,{children:[(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.td,{style:{textAlign:"left"},children:(0,d.jsx)(i.code,{children:"url"})}),(0,d.jsxs)(i.td,{style:{textAlign:"left"},children:[(0,d.jsx)(i.code,{children:"null"})," | ",(0,d.jsx)(i.code,{children:"string"})]})]}),(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.td,{style:{textAlign:"left"},children:(0,d.jsx)(i.code,{children:"attributes"})}),(0,d.jsx)(i.td,{style:{textAlign:"left"},children:(0,d.jsx)(i.a,{href:"/docs/api/modules/lexical_link#linkattributes",children:(0,d.jsx)(i.code,{children:"LinkAttributes"})})})]})]})]}),"\n",(0,d.jsx)(i.h4,{id:"returns-6",children:"Returns"}),"\n",(0,d.jsx)(i.p,{children:(0,d.jsx)(i.code,{children:"void"})}),"\n",(0,d.jsx)(i.p,{children:(0,d.jsx)(i.strong,{children:(0,d.jsx)(i.code,{children:"Deprecated"})})}),"\n",(0,d.jsxs)(i.p,{children:["renamed to ",(0,d.jsx)(i.a,{href:"/docs/api/modules/lexical_link#togglelink",children:"$toggleLink"})," by @lexical/eslint-plugin rules-of-lexical"]}),"\n",(0,d.jsx)(i.h4,{id:"defined-in-11",children:"Defined in"}),"\n",(0,d.jsx)(i.p,{children:(0,d.jsx)(i.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical-link/src/index.ts#L702",children:"packages/lexical-link/src/index.ts:702"})})]})}function x(e={}){let{wrapper:i}={...(0,t.a)(),...e.components};return i?(0,d.jsx)(i,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},22840:function(e,i,l){l.d(i,{Z:()=>r,a:()=>s});var n=l(2784);let d={},t=n.createContext(d);function s(e){let i=n.useContext(t);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:s(e.components),n.createElement(t.Provider,{value:i},e.children)}}}]);