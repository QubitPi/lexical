"use strict";(self.webpackChunk_lexical_website=self.webpackChunk_lexical_website||[]).push([["2984"],{75316:function(e,t,a){a.r(t),a.d(t,{frontMatter:()=>l,default:()=>h,contentTitle:()=>i,assets:()=>o,toc:()=>c,metadata:()=>n});var n=JSON.parse('{"id":"packages/lexical-headless","title":"@lexical/headless","description":"See API Documentation","source":"@site/docs/packages/lexical-headless.md","sourceDirName":"packages","slug":"/packages/lexical-headless","permalink":"/docs/packages/lexical-headless","draft":false,"unlisted":false,"editUrl":"https://github.com/QubitPi/lexical/tree/main/packages/lexical-headless/README.md","tags":[],"version":"current","frontMatter":{"custom_edit_url":"https://github.com/QubitPi/lexical/tree/main/packages/lexical-headless/README.md"},"sidebar":"docs","previous":{"title":"@lexical/hashtag","permalink":"/docs/packages/lexical-hashtag"},"next":{"title":"@lexical/history","permalink":"/docs/packages/lexical-history"}}'),s=a(52322),r=a(22840);let l={custom_edit_url:"https://github.com/QubitPi/lexical/tree/main/packages/lexical-headless/README.md"},i="@lexical/headless",o={},c=[];function d(e){let t={a:"a",code:"code",h1:"h1",header:"header",img:"img",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"lexicalheadless",children:(0,s.jsx)(t.code,{children:"@lexical/headless"})})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://lexical.dev/docs/api/modules/lexical_headless",children:(0,s.jsx)(t.img,{src:"https://lexical.dev/img/see-api-documentation.svg",alt:"See API Documentation"})})}),"\n",(0,s.jsx)(t.p,{children:"This package allows you to interact with Lexical in a headless environment (one that does not rely on DOM, e.g. for Node.js environment), and use its\nmain features like editor.update(), editor.registerNodeTransform(), editor.registerUpdateListener()\nto create, update or traverse state."}),"\n",(0,s.jsxs)(t.p,{children:["Install ",(0,s.jsx)(t.code,{children:"@lexical/headless"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"npm install --save @lexical/headless\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"const { createHeadlessEditor } = require('@lexical/headless');\n\nconst editor = createHeadlessEditor({\n  nodes: [],\n  onError: () => {},\n});\n\neditor.update(() => {\n  $getRoot().append(\n    $createParagraphNode().append(\n      $createTextNode('Hello world')\n    )\n  )\n});\n"})}),"\n",(0,s.jsx)(t.p,{children:"Any plugins that do not rely on DOM could also be used. Here's an example of how\nyou can convert lexical editor state to markdown on server:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"const { createHeadlessEditor } = require('@lexical/headless');\nconst { $convertToMarkdownString, TRANSFORMERS } = require('@lexical/markdown');\n\napp.get('article/:id/markdown', async (req, res) => {\n  const editor = createHeadlessEditor({\n    nodes: [],\n    onError: () => {},\n  });\n\n  const articleEditorStateJSON = await loadArticleBody(req.query.id);\n  editor.setEditorState(editor.parseEditorState(articleEditorStateJSON));\n\n  editor.update(() => {\n    const markdown = $convertToMarkdownString(TRANSFORMERS);\n    res.send(markdown);\n  });\n});\n\n"})})]})}function h(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},22840:function(e,t,a){a.d(t,{Z:()=>i,a:()=>l});var n=a(2784);let s={},r=n.createContext(s);function l(e){let t=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);