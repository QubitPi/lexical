"use strict";(self.webpackChunk_lexical_website=self.webpackChunk_lexical_website||[]).push([["1441"],{9431:function(e,t,l){l.r(t),l.d(t,{frontMatter:()=>s,default:()=>h,contentTitle:()=>c,assets:()=>r,toc:()=>o,metadata:()=>a});var a=JSON.parse('{"id":"packages/lexical-table","title":"@lexical/table","description":"See API Documentation","source":"@site/docs/packages/lexical-table.md","sourceDirName":"packages","slug":"/packages/lexical-table","permalink":"/lexical/docs/packages/lexical-table","draft":false,"unlisted":false,"editUrl":"https://github.com/QubitPi/lexical/tree/main/packages/lexical-table/README.md","tags":[],"version":"current","frontMatter":{"custom_edit_url":"https://github.com/QubitPi/lexical/tree/main/packages/lexical-table/README.md"},"sidebar":"docs","previous":{"title":"@lexical/selection","permalink":"/lexical/docs/packages/lexical-selection"},"next":{"title":"@lexical/text","permalink":"/lexical/docs/packages/lexical-text"}}'),i=l(52322),n=l(22840);let s={custom_edit_url:"https://github.com/QubitPi/lexical/tree/main/packages/lexical-table/README.md"},c="@lexical/table",r={},o=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Features",id:"features",level:2},{value:"Tables",id:"tables",level:3},{value:"Limitations",id:"limitations",level:3},{value:"Nested Tables",id:"nested-tables",level:4}];function d(e){let t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,n.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"lexicaltable",children:(0,i.jsx)(t.code,{children:"@lexical/table"})})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://lexical.dev/docs/api/modules/lexical_table",children:(0,i.jsx)(t.img,{src:"https://lexical.dev/img/see-api-documentation.svg",alt:"See API Documentation"})})}),"\n",(0,i.jsx)(t.p,{children:"This package contains the functionality for the Tables feature of Lexical."}),"\n",(0,i.jsx)(t.h1,{id:"lexical-table-plugin",children:"Lexical Table Plugin"}),"\n",(0,i.jsx)(t.p,{children:"A plugin for handling tables in Lexical."}),"\n",(0,i.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"npm install @lexical/table @lexical/react\n"})}),"\n",(0,i.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(t.p,{children:["See the ",(0,i.jsx)(t.a,{href:"https://github.com/facebook/lexical/tree/main/examples/react-table",children:"react-table example"}),"\nfor a minimal example that uses this package and the\n",(0,i.jsx)(t.a,{href:"https://lexical.dev/docs/api/modules/lexical_react_LexicalTablePlugin",children:"TablePlugin"}),"\nfrom @lexical/react/LexicalTablePlugin"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://stackblitz.com/github/facebook/lexical/tree/main/examples/react-table?file=src/main.tsx",children:(0,i.jsx)(t.img,{src:"https://developer.stackblitz.com/img/open_in_stackblitz.svg",alt:"Open in StackBlitz"})})}),"\n",(0,i.jsx)(t.h2,{id:"features",children:"Features"}),"\n",(0,i.jsx)(t.h3,{id:"tables",children:"Tables"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Create and edit tables with customizable rows and columns"}),"\n",(0,i.jsx)(t.li,{children:"Support for table headers"}),"\n",(0,i.jsx)(t.li,{children:"Cell selection and navigation"}),"\n",(0,i.jsx)(t.li,{children:"Copy and paste support"}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"limitations",children:"Limitations"}),"\n",(0,i.jsx)(t.h4,{id:"nested-tables",children:"Nested Tables"}),"\n",(0,i.jsx)(t.p,{children:"Nested tables (tables within table cells) are not supported in the editor. The following behaviors are enforced:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"When attempting to paste a table inside an existing table cell, the paste operation is blocked."}),"\n",(0,i.jsx)(t.li,{children:"The editor actively prevents the creation of nested tables through the UI or programmatically."}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Note: When pasting HTML content with nested tables, the nested content will be removed by default. Make sure to implement appropriate ",(0,i.jsx)(t.code,{children:"importDOM"})," handling if you need to preserve this content in some form."]}),"\n",(0,i.jsx)(t.p,{children:"This approach allows you to:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Detect nested tables in the imported HTML"}),"\n",(0,i.jsx)(t.li,{children:"Extract their content before it gets removed"}),"\n",(0,i.jsx)(t.li,{children:"Preserve the content in a format that works for your use case"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Choose an approach that best fits your needs:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Flatten nested tables into a single table"}),"\n",(0,i.jsx)(t.li,{children:"Convert nested tables to a different format (e.g., lists or paragraphs)"}),"\n",(0,i.jsx)(t.li,{children:"Store nested content as metadata for future processing"}),"\n"]})]})}function h(e={}){let{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},22840:function(e,t,l){l.d(t,{Z:()=>c,a:()=>s});var a=l(2784);let i={},n=a.createContext(i);function s(e){let t=a.useContext(n);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(n.Provider,{value:t},e.children)}}}]);