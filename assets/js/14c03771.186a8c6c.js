"use strict";(self.webpackChunk_lexical_website=self.webpackChunk_lexical_website||[]).push([["1353"],{50887:function(e,l,n){n.r(l),n.d(l,{frontMatter:()=>s,default:()=>a,contentTitle:()=>r,assets:()=>c,toc:()=>h,metadata:()=>i});var i=JSON.parse('{"id":"api/classes/lexical.ElementDOMSlot","title":"Class: ElementDOMSlot<T>","description":"lexical.ElementDOMSlot","source":"@site/docs/api/classes/lexical.ElementDOMSlot.md","sourceDirName":"api/classes","slug":"/api/classes/lexical.ElementDOMSlot","permalink":"/docs/api/classes/lexical.ElementDOMSlot","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"lexical.ElementDOMSlot","title":"Class: ElementDOMSlot<T>","custom_edit_url":null},"sidebar":"api","previous":{"title":"EditorState","permalink":"/docs/api/classes/lexical.EditorState"},"next":{"title":"ElementNode","permalink":"/docs/api/classes/lexical.ElementNode"}}'),t=n(52322),d=n(22840);let s={id:"lexical.ElementDOMSlot",title:"Class: ElementDOMSlot<T>",custom_edit_url:null},r=void 0,c={},h=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"after",id:"after",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"before",id:"before",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"element",id:"element",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"Methods",id:"methods",level:2},{value:"getFirstChild",id:"getfirstchild",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"insertChild",id:"insertchild",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"removeChild",id:"removechild",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"replaceChild",id:"replacechild",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"withAfter",id:"withafter",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"withBefore",id:"withbefore",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"withElement",id:"withelement",level:3},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-10",level:4}];function x(e){let l={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(l.p,{children:[(0,t.jsx)(l.a,{href:"/docs/api/modules/lexical",children:"lexical"}),".ElementDOMSlot"]}),"\n",(0,t.jsx)(l.p,{children:"A utility class for managing the DOM children of an ElementNode"}),"\n",(0,t.jsx)(l.h2,{id:"type-parameters",children:"Type parameters"}),"\n",(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsx)(l.tbody,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{style:{textAlign:"left"},children:(0,t.jsx)(l.code,{children:"T"})}),(0,t.jsxs)(l.td,{style:{textAlign:"left"},children:["extends ",(0,t.jsx)(l.code,{children:"HTMLElement"})," = ",(0,t.jsx)(l.code,{children:"HTMLElement"})]})]})})]}),"\n",(0,t.jsx)(l.h2,{id:"constructors",children:"Constructors"}),"\n",(0,t.jsx)(l.h3,{id:"constructor",children:"constructor"}),"\n",(0,t.jsxs)(l.p,{children:["\u2022 ",(0,t.jsx)(l.strong,{children:"new ElementDOMSlot"}),"<",(0,t.jsx)(l.code,{children:"T"}),">(",(0,t.jsx)(l.code,{children:"element"}),", ",(0,t.jsx)(l.code,{children:"before?"}),", ",(0,t.jsx)(l.code,{children:"after?"}),"): ",(0,t.jsx)(l.a,{href:"/docs/api/classes/lexical.ElementDOMSlot",children:(0,t.jsx)(l.code,{children:"ElementDOMSlot"})}),"<",(0,t.jsx)(l.code,{children:"T"}),">"]}),"\n",(0,t.jsx)(l.h4,{id:"type-parameters-1",children:"Type parameters"}),"\n",(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsx)(l.tbody,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{style:{textAlign:"left"},children:(0,t.jsx)(l.code,{children:"T"})}),(0,t.jsxs)(l.td,{style:{textAlign:"left"},children:["extends ",(0,t.jsx)(l.code,{children:"HTMLElement"})," = ",(0,t.jsx)(l.code,{children:"HTMLElement"})]})]})})]}),"\n",(0,t.jsx)(l.h4,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(l.th,{style:{textAlign:"left"},children:"Type"}),(0,t.jsx)(l.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,t.jsxs)(l.tbody,{children:[(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{style:{textAlign:"left"},children:(0,t.jsx)(l.code,{children:"element"})}),(0,t.jsx)(l.td,{style:{textAlign:"left"},children:(0,t.jsx)(l.code,{children:"T"})}),(0,t.jsx)(l.td,{style:{textAlign:"left"},children:"The element returned by createDOM"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{style:{textAlign:"left"},children:(0,t.jsx)(l.code,{children:"before?"})}),(0,t.jsxs)(l.td,{style:{textAlign:"left"},children:[(0,t.jsx)(l.code,{children:"null"})," | ",(0,t.jsx)(l.code,{children:"Node"})]}),(0,t.jsx)(l.td,{style:{textAlign:"left"},children:"All managed children will be inserted before this node, if defined"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{style:{textAlign:"left"},children:(0,t.jsx)(l.code,{children:"after?"})}),(0,t.jsxs)(l.td,{style:{textAlign:"left"},children:[(0,t.jsx)(l.code,{children:"null"})," | ",(0,t.jsx)(l.code,{children:"Node"})]}),(0,t.jsx)(l.td,{style:{textAlign:"left"},children:"All managed children will be inserted after this node, if defined"})]})]})]}),"\n",(0,t.jsx)(l.h4,{id:"returns",children:"Returns"}),"\n",(0,t.jsxs)(l.p,{children:[(0,t.jsx)(l.a,{href:"/docs/api/classes/lexical.ElementDOMSlot",children:(0,t.jsx)(l.code,{children:"ElementDOMSlot"})}),"<",(0,t.jsx)(l.code,{children:"T"}),">"]}),"\n",(0,t.jsx)(l.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,t.jsx)(l.p,{children:(0,t.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/nodes/LexicalElementNode.ts#L90",children:"packages/lexical/src/nodes/LexicalElementNode.ts:90"})}),"\n",(0,t.jsx)(l.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(l.h3,{id:"after",children:"after"}),"\n",(0,t.jsxs)(l.p,{children:["\u2022 ",(0,t.jsx)(l.code,{children:"Readonly"})," ",(0,t.jsx)(l.strong,{children:"after"}),": ",(0,t.jsx)(l.code,{children:"null"})," | ",(0,t.jsx)(l.code,{children:"Node"})]}),"\n",(0,t.jsx)(l.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,t.jsx)(l.p,{children:(0,t.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/nodes/LexicalElementNode.ts#L89",children:"packages/lexical/src/nodes/LexicalElementNode.ts:89"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"before",children:"before"}),"\n",(0,t.jsxs)(l.p,{children:["\u2022 ",(0,t.jsx)(l.code,{children:"Readonly"})," ",(0,t.jsx)(l.strong,{children:"before"}),": ",(0,t.jsx)(l.code,{children:"null"})," | ",(0,t.jsx)(l.code,{children:"Node"})]}),"\n",(0,t.jsx)(l.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,t.jsx)(l.p,{children:(0,t.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/nodes/LexicalElementNode.ts#L88",children:"packages/lexical/src/nodes/LexicalElementNode.ts:88"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"element",children:"element"}),"\n",(0,t.jsxs)(l.p,{children:["\u2022 ",(0,t.jsx)(l.code,{children:"Readonly"})," ",(0,t.jsx)(l.strong,{children:"element"}),": ",(0,t.jsx)(l.code,{children:"T"})]}),"\n",(0,t.jsx)(l.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,t.jsx)(l.p,{children:(0,t.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/nodes/LexicalElementNode.ts#L87",children:"packages/lexical/src/nodes/LexicalElementNode.ts:87"})}),"\n",(0,t.jsx)(l.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(l.h3,{id:"getfirstchild",children:"getFirstChild"}),"\n",(0,t.jsxs)(l.p,{children:["\u25B8 ",(0,t.jsx)(l.strong,{children:"getFirstChild"}),"(): ",(0,t.jsx)(l.code,{children:"null"})," | ",(0,t.jsx)(l.code,{children:"ChildNode"})]}),"\n",(0,t.jsx)(l.p,{children:"Returns the first managed child of this node,\nwhich will either be this.after.nextSibling or this.element.firstChild,\nand will never be this.before if it is defined."}),"\n",(0,t.jsx)(l.h4,{id:"returns-1",children:"Returns"}),"\n",(0,t.jsxs)(l.p,{children:[(0,t.jsx)(l.code,{children:"null"})," | ",(0,t.jsx)(l.code,{children:"ChildNode"})]}),"\n",(0,t.jsx)(l.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,t.jsx)(l.p,{children:(0,t.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/nodes/LexicalElementNode.ts#L168",children:"packages/lexical/src/nodes/LexicalElementNode.ts:168"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"insertchild",children:"insertChild"}),"\n",(0,t.jsxs)(l.p,{children:["\u25B8 ",(0,t.jsx)(l.strong,{children:"insertChild"}),"(",(0,t.jsx)(l.code,{children:"dom"}),"): ",(0,t.jsx)(l.code,{children:"this"})]}),"\n",(0,t.jsx)(l.p,{children:"Insert the given child before this.before and any reconciler managed line break node,\nor append it if this.before is not defined"}),"\n",(0,t.jsx)(l.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsx)(l.tbody,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{style:{textAlign:"left"},children:(0,t.jsx)(l.code,{children:"dom"})}),(0,t.jsx)(l.td,{style:{textAlign:"left"},children:(0,t.jsx)(l.code,{children:"Node"})})]})})]}),"\n",(0,t.jsx)(l.h4,{id:"returns-2",children:"Returns"}),"\n",(0,t.jsx)(l.p,{children:(0,t.jsx)(l.code,{children:"this"})}),"\n",(0,t.jsx)(l.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,t.jsx)(l.p,{children:(0,t.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/nodes/LexicalElementNode.ts#L129",children:"packages/lexical/src/nodes/LexicalElementNode.ts:129"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"removechild",children:"removeChild"}),"\n",(0,t.jsxs)(l.p,{children:["\u25B8 ",(0,t.jsx)(l.strong,{children:"removeChild"}),"(",(0,t.jsx)(l.code,{children:"dom"}),"): ",(0,t.jsx)(l.code,{children:"this"})]}),"\n",(0,t.jsx)(l.p,{children:"Remove the managed child from this container, will throw if it was not already there"}),"\n",(0,t.jsx)(l.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsx)(l.tbody,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{style:{textAlign:"left"},children:(0,t.jsx)(l.code,{children:"dom"})}),(0,t.jsx)(l.td,{style:{textAlign:"left"},children:(0,t.jsx)(l.code,{children:"Node"})})]})})]}),"\n",(0,t.jsx)(l.h4,{id:"returns-3",children:"Returns"}),"\n",(0,t.jsx)(l.p,{children:(0,t.jsx)(l.code,{children:"this"})}),"\n",(0,t.jsx)(l.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,t.jsx)(l.p,{children:(0,t.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/nodes/LexicalElementNode.ts#L141",children:"packages/lexical/src/nodes/LexicalElementNode.ts:141"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"replacechild",children:"replaceChild"}),"\n",(0,t.jsxs)(l.p,{children:["\u25B8 ",(0,t.jsx)(l.strong,{children:"replaceChild"}),"(",(0,t.jsx)(l.code,{children:"dom"}),", ",(0,t.jsx)(l.code,{children:"prevDom"}),"): ",(0,t.jsx)(l.code,{children:"this"})]}),"\n",(0,t.jsx)(l.p,{children:"Replace managed child prevDom with dom. Will throw if prevDom is not a child"}),"\n",(0,t.jsx)(l.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(l.th,{style:{textAlign:"left"},children:"Type"}),(0,t.jsx)(l.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,t.jsxs)(l.tbody,{children:[(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{style:{textAlign:"left"},children:(0,t.jsx)(l.code,{children:"dom"})}),(0,t.jsx)(l.td,{style:{textAlign:"left"},children:(0,t.jsx)(l.code,{children:"Node"})}),(0,t.jsx)(l.td,{style:{textAlign:"left"},children:"The new node to replace prevDom"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{style:{textAlign:"left"},children:(0,t.jsx)(l.code,{children:"prevDom"})}),(0,t.jsx)(l.td,{style:{textAlign:"left"},children:(0,t.jsx)(l.code,{children:"Node"})}),(0,t.jsx)(l.td,{style:{textAlign:"left"},children:"the node that will be replaced"})]})]})]}),"\n",(0,t.jsx)(l.h4,{id:"returns-4",children:"Returns"}),"\n",(0,t.jsx)(l.p,{children:(0,t.jsx)(l.code,{children:"this"})}),"\n",(0,t.jsx)(l.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,t.jsx)(l.p,{children:(0,t.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/nodes/LexicalElementNode.ts#L155",children:"packages/lexical/src/nodes/LexicalElementNode.ts:155"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"withafter",children:"withAfter"}),"\n",(0,t.jsxs)(l.p,{children:["\u25B8 ",(0,t.jsx)(l.strong,{children:"withAfter"}),"(",(0,t.jsx)(l.code,{children:"after"}),"): ",(0,t.jsx)(l.a,{href:"/docs/api/classes/lexical.ElementDOMSlot",children:(0,t.jsx)(l.code,{children:"ElementDOMSlot"})}),"<",(0,t.jsx)(l.code,{children:"T"}),">"]}),"\n",(0,t.jsx)(l.p,{children:"Return a new ElementDOMSlot where all managed children will be inserted after this node"}),"\n",(0,t.jsx)(l.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsx)(l.tbody,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{style:{textAlign:"left"},children:(0,t.jsx)(l.code,{children:"after"})}),(0,t.jsxs)(l.td,{style:{textAlign:"left"},children:[(0,t.jsx)(l.code,{children:"undefined"})," | ",(0,t.jsx)(l.code,{children:"null"})," | ",(0,t.jsx)(l.code,{children:"Node"})]})]})})]}),"\n",(0,t.jsx)(l.h4,{id:"returns-5",children:"Returns"}),"\n",(0,t.jsxs)(l.p,{children:[(0,t.jsx)(l.a,{href:"/docs/api/classes/lexical.ElementDOMSlot",children:(0,t.jsx)(l.code,{children:"ElementDOMSlot"})}),"<",(0,t.jsx)(l.code,{children:"T"}),">"]}),"\n",(0,t.jsx)(l.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,t.jsx)(l.p,{children:(0,t.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/nodes/LexicalElementNode.ts#L111",children:"packages/lexical/src/nodes/LexicalElementNode.ts:111"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"withbefore",children:"withBefore"}),"\n",(0,t.jsxs)(l.p,{children:["\u25B8 ",(0,t.jsx)(l.strong,{children:"withBefore"}),"(",(0,t.jsx)(l.code,{children:"before"}),"): ",(0,t.jsx)(l.a,{href:"/docs/api/classes/lexical.ElementDOMSlot",children:(0,t.jsx)(l.code,{children:"ElementDOMSlot"})}),"<",(0,t.jsx)(l.code,{children:"T"}),">"]}),"\n",(0,t.jsx)(l.p,{children:"Return a new ElementDOMSlot where all managed children will be inserted before this node"}),"\n",(0,t.jsx)(l.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsx)(l.tbody,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{style:{textAlign:"left"},children:(0,t.jsx)(l.code,{children:"before"})}),(0,t.jsxs)(l.td,{style:{textAlign:"left"},children:[(0,t.jsx)(l.code,{children:"undefined"})," | ",(0,t.jsx)(l.code,{children:"null"})," | ",(0,t.jsx)(l.code,{children:"Node"})]})]})})]}),"\n",(0,t.jsx)(l.h4,{id:"returns-6",children:"Returns"}),"\n",(0,t.jsxs)(l.p,{children:[(0,t.jsx)(l.a,{href:"/docs/api/classes/lexical.ElementDOMSlot",children:(0,t.jsx)(l.code,{children:"ElementDOMSlot"})}),"<",(0,t.jsx)(l.code,{children:"T"}),">"]}),"\n",(0,t.jsx)(l.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,t.jsx)(l.p,{children:(0,t.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/nodes/LexicalElementNode.ts#L105",children:"packages/lexical/src/nodes/LexicalElementNode.ts:105"})}),"\n",(0,t.jsx)(l.hr,{}),"\n",(0,t.jsx)(l.h3,{id:"withelement",children:"withElement"}),"\n",(0,t.jsxs)(l.p,{children:["\u25B8 ",(0,t.jsx)(l.strong,{children:"withElement"}),"<",(0,t.jsx)(l.code,{children:"ElementType"}),">(",(0,t.jsx)(l.code,{children:"element"}),"): ",(0,t.jsx)(l.a,{href:"/docs/api/classes/lexical.ElementDOMSlot",children:(0,t.jsx)(l.code,{children:"ElementDOMSlot"})}),"<",(0,t.jsx)(l.code,{children:"ElementType"}),">"]}),"\n",(0,t.jsx)(l.p,{children:"Return a new ElementDOMSlot with an updated root element"}),"\n",(0,t.jsx)(l.h4,{id:"type-parameters-2",children:"Type parameters"}),"\n",(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsx)(l.tbody,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{style:{textAlign:"left"},children:(0,t.jsx)(l.code,{children:"ElementType"})}),(0,t.jsxs)(l.td,{style:{textAlign:"left"},children:["extends ",(0,t.jsx)(l.code,{children:"HTMLElement"})]})]})})]}),"\n",(0,t.jsx)(l.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsx)(l.tbody,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{style:{textAlign:"left"},children:(0,t.jsx)(l.code,{children:"element"})}),(0,t.jsx)(l.td,{style:{textAlign:"left"},children:(0,t.jsx)(l.code,{children:"ElementType"})})]})})]}),"\n",(0,t.jsx)(l.h4,{id:"returns-7",children:"Returns"}),"\n",(0,t.jsxs)(l.p,{children:[(0,t.jsx)(l.a,{href:"/docs/api/classes/lexical.ElementDOMSlot",children:(0,t.jsx)(l.code,{children:"ElementDOMSlot"})}),"<",(0,t.jsx)(l.code,{children:"ElementType"}),">"]}),"\n",(0,t.jsx)(l.h4,{id:"defined-in-10",children:"Defined in"}),"\n",(0,t.jsx)(l.p,{children:(0,t.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/nodes/LexicalElementNode.ts#L117",children:"packages/lexical/src/nodes/LexicalElementNode.ts:117"})})]})}function a(e={}){let{wrapper:l}={...(0,d.a)(),...e.components};return l?(0,t.jsx)(l,{...e,children:(0,t.jsx)(x,{...e})}):x(e)}},22840:function(e,l,n){n.d(l,{Z:()=>r,a:()=>s});var i=n(2784);let t={},d=i.createContext(t);function s(e){let l=i.useContext(d);return i.useMemo(function(){return"function"==typeof e?e(l):{...l,...e}},[l,e])}function r(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(d.Provider,{value:l},e.children)}}}]);