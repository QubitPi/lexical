"use strict";(self.webpackChunk_lexical_website=self.webpackChunk_lexical_website||[]).push([["8939"],{34350:function(e,l,i){i.r(l),i.d(l,{frontMatter:()=>c,default:()=>h,contentTitle:()=>d,assets:()=>r,toc:()=>a,metadata:()=>n});var n=JSON.parse('{"id":"api/classes/lexical.Point","title":"Class: Point","description":"lexical.Point","source":"@site/docs/api/classes/lexical.Point.md","sourceDirName":"api/classes","slug":"/api/classes/lexical.Point","permalink":"/lexical/docs/api/classes/lexical.Point","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"lexical.Point","title":"Class: Point","custom_edit_url":null},"sidebar":"api","previous":{"title":"ParagraphNode","permalink":"/lexical/docs/api/classes/lexical.ParagraphNode"},"next":{"title":"RangeSelection","permalink":"/lexical/docs/api/classes/lexical.RangeSelection"}}'),s=i(52322),t=i(22840);let c={id:"lexical.Point",title:"Class: Point",custom_edit_url:null},d=void 0,r={},a=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"_selection",id:"_selection",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"key",id:"key",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"offset",id:"offset",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"type",id:"type",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"Methods",id:"methods",level:2},{value:"getNode",id:"getnode",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"is",id:"is",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"isBefore",id:"isbefore",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"set",id:"set",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-8",level:4}];function x(e){let l={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(l.p,{children:[(0,s.jsx)(l.a,{href:"/lexical/docs/api/modules/lexical",children:"lexical"}),".Point"]}),"\n",(0,s.jsx)(l.h2,{id:"constructors",children:"Constructors"}),"\n",(0,s.jsx)(l.h3,{id:"constructor",children:"constructor"}),"\n",(0,s.jsxs)(l.p,{children:["\u2022 ",(0,s.jsx)(l.strong,{children:"new Point"}),"(",(0,s.jsx)(l.code,{children:"key"}),", ",(0,s.jsx)(l.code,{children:"offset"}),", ",(0,s.jsx)(l.code,{children:"type"}),"): ",(0,s.jsx)(l.a,{href:"/lexical/docs/api/classes/lexical.Point",children:(0,s.jsx)(l.code,{children:"Point"})})]}),"\n",(0,s.jsx)(l.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(l.table,{children:[(0,s.jsx)(l.thead,{children:(0,s.jsxs)(l.tr,{children:[(0,s.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(l.tbody,{children:[(0,s.jsxs)(l.tr,{children:[(0,s.jsx)(l.td,{style:{textAlign:"left"},children:(0,s.jsx)(l.code,{children:"key"})}),(0,s.jsx)(l.td,{style:{textAlign:"left"},children:(0,s.jsx)(l.code,{children:"string"})})]}),(0,s.jsxs)(l.tr,{children:[(0,s.jsx)(l.td,{style:{textAlign:"left"},children:(0,s.jsx)(l.code,{children:"offset"})}),(0,s.jsx)(l.td,{style:{textAlign:"left"},children:(0,s.jsx)(l.code,{children:"number"})})]}),(0,s.jsxs)(l.tr,{children:[(0,s.jsx)(l.td,{style:{textAlign:"left"},children:(0,s.jsx)(l.code,{children:"type"})}),(0,s.jsxs)(l.td,{style:{textAlign:"left"},children:[(0,s.jsx)(l.code,{children:'"text"'})," | ",(0,s.jsx)(l.code,{children:'"element"'})]})]})]})]}),"\n",(0,s.jsx)(l.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(l.p,{children:(0,s.jsx)(l.a,{href:"/lexical/docs/api/classes/lexical.Point",children:(0,s.jsx)(l.code,{children:"Point"})})}),"\n",(0,s.jsx)(l.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(l.p,{children:(0,s.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/LexicalSelection.ts#L135",children:"packages/lexical/src/LexicalSelection.ts:135"})}),"\n",(0,s.jsx)(l.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(l.h3,{id:"_selection",children:"_selection"}),"\n",(0,s.jsxs)(l.p,{children:["\u2022 ",(0,s.jsx)(l.strong,{children:"_selection"}),": ",(0,s.jsx)(l.code,{children:"null"})," | ",(0,s.jsx)(l.a,{href:"/lexical/docs/api/interfaces/lexical.BaseSelection",children:(0,s.jsx)(l.code,{children:"BaseSelection"})})]}),"\n",(0,s.jsx)(l.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,s.jsx)(l.p,{children:(0,s.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/LexicalSelection.ts#L133",children:"packages/lexical/src/LexicalSelection.ts:133"})}),"\n",(0,s.jsx)(l.hr,{}),"\n",(0,s.jsx)(l.h3,{id:"key",children:"key"}),"\n",(0,s.jsxs)(l.p,{children:["\u2022 ",(0,s.jsx)(l.strong,{children:"key"}),": ",(0,s.jsx)(l.code,{children:"string"})]}),"\n",(0,s.jsx)(l.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,s.jsx)(l.p,{children:(0,s.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/LexicalSelection.ts#L130",children:"packages/lexical/src/LexicalSelection.ts:130"})}),"\n",(0,s.jsx)(l.hr,{}),"\n",(0,s.jsx)(l.h3,{id:"offset",children:"offset"}),"\n",(0,s.jsxs)(l.p,{children:["\u2022 ",(0,s.jsx)(l.strong,{children:"offset"}),": ",(0,s.jsx)(l.code,{children:"number"})]}),"\n",(0,s.jsx)(l.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,s.jsx)(l.p,{children:(0,s.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/LexicalSelection.ts#L131",children:"packages/lexical/src/LexicalSelection.ts:131"})}),"\n",(0,s.jsx)(l.hr,{}),"\n",(0,s.jsx)(l.h3,{id:"type",children:"type"}),"\n",(0,s.jsxs)(l.p,{children:["\u2022 ",(0,s.jsx)(l.strong,{children:"type"}),": ",(0,s.jsx)(l.code,{children:'"text"'})," | ",(0,s.jsx)(l.code,{children:'"element"'})]}),"\n",(0,s.jsx)(l.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,s.jsx)(l.p,{children:(0,s.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/LexicalSelection.ts#L132",children:"packages/lexical/src/LexicalSelection.ts:132"})}),"\n",(0,s.jsx)(l.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(l.h3,{id:"getnode",children:"getNode"}),"\n",(0,s.jsxs)(l.p,{children:["\u25B8 ",(0,s.jsx)(l.strong,{children:"getNode"}),"(): ",(0,s.jsx)(l.a,{href:"/lexical/docs/api/classes/lexical.LexicalNode",children:(0,s.jsx)(l.code,{children:"LexicalNode"})})]}),"\n",(0,s.jsx)(l.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsx)(l.p,{children:(0,s.jsx)(l.a,{href:"/lexical/docs/api/classes/lexical.LexicalNode",children:(0,s.jsx)(l.code,{children:"LexicalNode"})})}),"\n",(0,s.jsx)(l.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,s.jsx)(l.p,{children:(0,s.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/LexicalSelection.ts#L167",children:"packages/lexical/src/LexicalSelection.ts:167"})}),"\n",(0,s.jsx)(l.hr,{}),"\n",(0,s.jsx)(l.h3,{id:"is",children:"is"}),"\n",(0,s.jsxs)(l.p,{children:["\u25B8 ",(0,s.jsx)(l.strong,{children:"is"}),"(",(0,s.jsx)(l.code,{children:"point"}),"): ",(0,s.jsx)(l.code,{children:"boolean"})]}),"\n",(0,s.jsx)(l.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,s.jsxs)(l.table,{children:[(0,s.jsx)(l.thead,{children:(0,s.jsxs)(l.tr,{children:[(0,s.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(l.tbody,{children:(0,s.jsxs)(l.tr,{children:[(0,s.jsx)(l.td,{style:{textAlign:"left"},children:(0,s.jsx)(l.code,{children:"point"})}),(0,s.jsx)(l.td,{style:{textAlign:"left"},children:(0,s.jsx)(l.a,{href:"/lexical/docs/api/modules/lexical#pointtype",children:(0,s.jsx)(l.code,{children:"PointType"})})})]})})]}),"\n",(0,s.jsx)(l.h4,{id:"returns-2",children:"Returns"}),"\n",(0,s.jsx)(l.p,{children:(0,s.jsx)(l.code,{children:"boolean"})}),"\n",(0,s.jsx)(l.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,s.jsx)(l.p,{children:(0,s.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/LexicalSelection.ts#L150",children:"packages/lexical/src/LexicalSelection.ts:150"})}),"\n",(0,s.jsx)(l.hr,{}),"\n",(0,s.jsx)(l.h3,{id:"isbefore",children:"isBefore"}),"\n",(0,s.jsxs)(l.p,{children:["\u25B8 ",(0,s.jsx)(l.strong,{children:"isBefore"}),"(",(0,s.jsx)(l.code,{children:"b"}),"): ",(0,s.jsx)(l.code,{children:"boolean"})]}),"\n",(0,s.jsx)(l.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,s.jsxs)(l.table,{children:[(0,s.jsx)(l.thead,{children:(0,s.jsxs)(l.tr,{children:[(0,s.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(l.tbody,{children:(0,s.jsxs)(l.tr,{children:[(0,s.jsx)(l.td,{style:{textAlign:"left"},children:(0,s.jsx)(l.code,{children:"b"})}),(0,s.jsx)(l.td,{style:{textAlign:"left"},children:(0,s.jsx)(l.a,{href:"/lexical/docs/api/modules/lexical#pointtype",children:(0,s.jsx)(l.code,{children:"PointType"})})})]})})]}),"\n",(0,s.jsx)(l.h4,{id:"returns-3",children:"Returns"}),"\n",(0,s.jsx)(l.p,{children:(0,s.jsx)(l.code,{children:"boolean"})}),"\n",(0,s.jsx)(l.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,s.jsx)(l.p,{children:(0,s.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/LexicalSelection.ts#L158",children:"packages/lexical/src/LexicalSelection.ts:158"})}),"\n",(0,s.jsx)(l.hr,{}),"\n",(0,s.jsx)(l.h3,{id:"set",children:"set"}),"\n",(0,s.jsxs)(l.p,{children:["\u25B8 ",(0,s.jsx)(l.strong,{children:"set"}),"(",(0,s.jsx)(l.code,{children:"key"}),", ",(0,s.jsx)(l.code,{children:"offset"}),", ",(0,s.jsx)(l.code,{children:"type"}),", ",(0,s.jsx)(l.code,{children:"onlyIfChanged?"}),"): ",(0,s.jsx)(l.code,{children:"void"})]}),"\n",(0,s.jsx)(l.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,s.jsxs)(l.table,{children:[(0,s.jsx)(l.thead,{children:(0,s.jsxs)(l.tr,{children:[(0,s.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(l.tbody,{children:[(0,s.jsxs)(l.tr,{children:[(0,s.jsx)(l.td,{style:{textAlign:"left"},children:(0,s.jsx)(l.code,{children:"key"})}),(0,s.jsx)(l.td,{style:{textAlign:"left"},children:(0,s.jsx)(l.code,{children:"string"})})]}),(0,s.jsxs)(l.tr,{children:[(0,s.jsx)(l.td,{style:{textAlign:"left"},children:(0,s.jsx)(l.code,{children:"offset"})}),(0,s.jsx)(l.td,{style:{textAlign:"left"},children:(0,s.jsx)(l.code,{children:"number"})})]}),(0,s.jsxs)(l.tr,{children:[(0,s.jsx)(l.td,{style:{textAlign:"left"},children:(0,s.jsx)(l.code,{children:"type"})}),(0,s.jsxs)(l.td,{style:{textAlign:"left"},children:[(0,s.jsx)(l.code,{children:'"text"'})," | ",(0,s.jsx)(l.code,{children:'"element"'})]})]}),(0,s.jsxs)(l.tr,{children:[(0,s.jsx)(l.td,{style:{textAlign:"left"},children:(0,s.jsx)(l.code,{children:"onlyIfChanged?"})}),(0,s.jsx)(l.td,{style:{textAlign:"left"},children:(0,s.jsx)(l.code,{children:"boolean"})})]})]})]}),"\n",(0,s.jsx)(l.h4,{id:"returns-4",children:"Returns"}),"\n",(0,s.jsx)(l.p,{children:(0,s.jsx)(l.code,{children:"void"})}),"\n",(0,s.jsx)(l.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,s.jsx)(l.p,{children:(0,s.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/LexicalSelection.ts#L176",children:"packages/lexical/src/LexicalSelection.ts:176"})})]})}function h(e={}){let{wrapper:l}={...(0,t.a)(),...e.components};return l?(0,s.jsx)(l,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},22840:function(e,l,i){i.d(l,{Z:()=>d,a:()=>c});var n=i(2784);let s={},t=n.createContext(s);function c(e){let l=n.useContext(t);return n.useMemo(function(){return"function"==typeof e?e(l):{...l,...e}},[l,e])}function d(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),n.createElement(t.Provider,{value:l},e.children)}}}]);