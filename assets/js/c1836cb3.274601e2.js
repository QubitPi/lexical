"use strict";(self.webpackChunk_lexical_website=self.webpackChunk_lexical_website||[]).push([["5256"],{82791:function(e,l,t){t.r(l),t.d(l,{frontMatter:()=>d,default:()=>x,contentTitle:()=>r,assets:()=>c,toc:()=>a,metadata:()=>i});var i=JSON.parse('{"id":"api/classes/lexical.StateConfig","title":"Class: StateConfig<K, V>","description":"lexical.StateConfig","source":"@site/docs/api/classes/lexical.StateConfig.md","sourceDirName":"api/classes","slug":"/api/classes/lexical.StateConfig","permalink":"/lexical/docs/api/classes/lexical.StateConfig","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"lexical.StateConfig","title":"Class: StateConfig<K, V>","custom_edit_url":null},"sidebar":"api","previous":{"title":"RootNode","permalink":"/lexical/docs/api/classes/lexical.RootNode"},"next":{"title":"TabNode","permalink":"/lexical/docs/api/classes/lexical.TabNode"}}'),n=t(52322),s=t(22840);let d={id:"lexical.StateConfig",title:"Class: StateConfig<K, V>",custom_edit_url:null},r=void 0,c={},a=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"defaultValue",id:"defaultvalue",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"isEqual",id:"isequal",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"Returns",id:"returns-1",level:5},{value:"Defined in",id:"defined-in-2",level:4},{value:"key",id:"key",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"parse",id:"parse",level:3},{value:"Type declaration",id:"type-declaration-1",level:4},{value:"Parameters",id:"parameters-2",level:5},{value:"Returns",id:"returns-2",level:5},{value:"Defined in",id:"defined-in-4",level:4},{value:"unparse",id:"unparse",level:3},{value:"Type declaration",id:"type-declaration-2",level:4},{value:"Parameters",id:"parameters-3",level:5},{value:"Returns",id:"returns-3",level:5},{value:"Defined in",id:"defined-in-5",level:4}];function h(e){let l={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(l.p,{children:[(0,n.jsx)(l.a,{href:"/lexical/docs/api/modules/lexical",children:"lexical"}),".StateConfig"]}),"\n",(0,n.jsxs)(l.p,{children:["The return value of ",(0,n.jsx)(l.a,{href:"/lexical/docs/api/modules/lexical#createstate",children:"createState"}),", for use with\n",(0,n.jsx)(l.a,{href:"/lexical/docs/api/modules/lexical#getstate",children:"$getState"})," and ",(0,n.jsx)(l.a,{href:"/lexical/docs/api/modules/lexical#setstate",children:"$setState"}),"."]}),"\n",(0,n.jsx)(l.h2,{id:"type-parameters",children:"Type parameters"}),"\n",(0,n.jsxs)(l.table,{children:[(0,n.jsx)(l.thead,{children:(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,n.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,n.jsxs)(l.tbody,{children:[(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.td,{style:{textAlign:"left"},children:(0,n.jsx)(l.code,{children:"K"})}),(0,n.jsxs)(l.td,{style:{textAlign:"left"},children:["extends ",(0,n.jsx)(l.code,{children:"string"})]})]}),(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.td,{style:{textAlign:"left"},children:(0,n.jsx)(l.code,{children:"V"})}),(0,n.jsx)(l.td,{style:{textAlign:"left"},children:(0,n.jsx)(l.code,{children:"V"})})]})]})]}),"\n",(0,n.jsx)(l.h2,{id:"constructors",children:"Constructors"}),"\n",(0,n.jsx)(l.h3,{id:"constructor",children:"constructor"}),"\n",(0,n.jsxs)(l.p,{children:["\u2022 ",(0,n.jsx)(l.strong,{children:"new StateConfig"}),"<",(0,n.jsx)(l.code,{children:"K"}),", ",(0,n.jsx)(l.code,{children:"V"}),">(",(0,n.jsx)(l.code,{children:"key"}),", ",(0,n.jsx)(l.code,{children:"stateValueConfig"}),"): ",(0,n.jsx)(l.a,{href:"/lexical/docs/api/classes/lexical.StateConfig",children:(0,n.jsx)(l.code,{children:"StateConfig"})}),"<",(0,n.jsx)(l.code,{children:"K"}),", ",(0,n.jsx)(l.code,{children:"V"}),">"]}),"\n",(0,n.jsx)(l.h4,{id:"type-parameters-1",children:"Type parameters"}),"\n",(0,n.jsxs)(l.table,{children:[(0,n.jsx)(l.thead,{children:(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,n.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,n.jsxs)(l.tbody,{children:[(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.td,{style:{textAlign:"left"},children:(0,n.jsx)(l.code,{children:"K"})}),(0,n.jsxs)(l.td,{style:{textAlign:"left"},children:["extends ",(0,n.jsx)(l.code,{children:"string"})]})]}),(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.td,{style:{textAlign:"left"},children:(0,n.jsx)(l.code,{children:"V"})}),(0,n.jsx)(l.td,{style:{textAlign:"left"},children:(0,n.jsx)(l.code,{children:"V"})})]})]})]}),"\n",(0,n.jsx)(l.h4,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(l.table,{children:[(0,n.jsx)(l.thead,{children:(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,n.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,n.jsxs)(l.tbody,{children:[(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.td,{style:{textAlign:"left"},children:(0,n.jsx)(l.code,{children:"key"})}),(0,n.jsx)(l.td,{style:{textAlign:"left"},children:(0,n.jsx)(l.code,{children:"K"})})]}),(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.td,{style:{textAlign:"left"},children:(0,n.jsx)(l.code,{children:"stateValueConfig"})}),(0,n.jsxs)(l.td,{style:{textAlign:"left"},children:[(0,n.jsx)(l.a,{href:"/lexical/docs/api/interfaces/lexical.StateValueConfig",children:(0,n.jsx)(l.code,{children:"StateValueConfig"})}),"<",(0,n.jsx)(l.code,{children:"V"}),">"]})]})]})]}),"\n",(0,n.jsx)(l.h4,{id:"returns",children:"Returns"}),"\n",(0,n.jsxs)(l.p,{children:[(0,n.jsx)(l.a,{href:"/lexical/docs/api/classes/lexical.StateConfig",children:(0,n.jsx)(l.code,{children:"StateConfig"})}),"<",(0,n.jsx)(l.code,{children:"K"}),", ",(0,n.jsx)(l.code,{children:"V"}),">"]}),"\n",(0,n.jsx)(l.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,n.jsx)(l.p,{children:(0,n.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/LexicalNodeState.ts#L261",children:"packages/lexical/src/LexicalNodeState.ts:261"})}),"\n",(0,n.jsx)(l.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(l.h3,{id:"defaultvalue",children:"defaultValue"}),"\n",(0,n.jsxs)(l.p,{children:["\u2022 ",(0,n.jsx)(l.code,{children:"Readonly"})," ",(0,n.jsx)(l.strong,{children:"defaultValue"}),": ",(0,n.jsx)(l.code,{children:"V"})]}),"\n",(0,n.jsxs)(l.p,{children:["The result of ",(0,n.jsx)(l.code,{children:"stateValueConfig.parse(undefined)"}),", which is computed only\nonce and used as the default value. When the current value ",(0,n.jsx)(l.code,{children:"isEqual"})," to\nthe ",(0,n.jsx)(l.code,{children:"defaultValue"}),", it will not be serialized to JSON."]}),"\n",(0,n.jsx)(l.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,n.jsx)(l.p,{children:(0,n.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/LexicalNodeState.ts#L260",children:"packages/lexical/src/LexicalNodeState.ts:260"})}),"\n",(0,n.jsx)(l.hr,{}),"\n",(0,n.jsx)(l.h3,{id:"isequal",children:"isEqual"}),"\n",(0,n.jsxs)(l.p,{children:["\u2022 ",(0,n.jsx)(l.code,{children:"Readonly"})," ",(0,n.jsx)(l.strong,{children:"isEqual"}),": (",(0,n.jsx)(l.code,{children:"a"}),": ",(0,n.jsx)(l.code,{children:"V"}),", ",(0,n.jsx)(l.code,{children:"b"}),": ",(0,n.jsx)(l.code,{children:"V"}),") => ",(0,n.jsx)(l.code,{children:"boolean"})]}),"\n",(0,n.jsx)(l.p,{children:"An equality function from the StateValueConfig, with a default of\nObject.is."}),"\n",(0,n.jsx)(l.h4,{id:"type-declaration",children:"Type declaration"}),"\n",(0,n.jsxs)(l.p,{children:["\u25B8 (",(0,n.jsx)(l.code,{children:"a"}),", ",(0,n.jsx)(l.code,{children:"b"}),"): ",(0,n.jsx)(l.code,{children:"boolean"})]}),"\n",(0,n.jsx)(l.h5,{id:"parameters-1",children:"Parameters"}),"\n",(0,n.jsxs)(l.table,{children:[(0,n.jsx)(l.thead,{children:(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,n.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,n.jsxs)(l.tbody,{children:[(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.td,{style:{textAlign:"left"},children:(0,n.jsx)(l.code,{children:"a"})}),(0,n.jsx)(l.td,{style:{textAlign:"left"},children:(0,n.jsx)(l.code,{children:"V"})})]}),(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.td,{style:{textAlign:"left"},children:(0,n.jsx)(l.code,{children:"b"})}),(0,n.jsx)(l.td,{style:{textAlign:"left"},children:(0,n.jsx)(l.code,{children:"V"})})]})]})]}),"\n",(0,n.jsx)(l.h5,{id:"returns-1",children:"Returns"}),"\n",(0,n.jsx)(l.p,{children:(0,n.jsx)(l.code,{children:"boolean"})}),"\n",(0,n.jsx)(l.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,n.jsx)(l.p,{children:(0,n.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/LexicalNodeState.ts#L254",children:"packages/lexical/src/LexicalNodeState.ts:254"})}),"\n",(0,n.jsx)(l.hr,{}),"\n",(0,n.jsx)(l.h3,{id:"key",children:"key"}),"\n",(0,n.jsxs)(l.p,{children:["\u2022 ",(0,n.jsx)(l.code,{children:"Readonly"})," ",(0,n.jsx)(l.strong,{children:"key"}),": ",(0,n.jsx)(l.code,{children:"K"})]}),"\n",(0,n.jsx)(l.p,{children:"The string key used when serializing this state to JSON"}),"\n",(0,n.jsx)(l.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,n.jsx)(l.p,{children:(0,n.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/LexicalNodeState.ts#L241",children:"packages/lexical/src/LexicalNodeState.ts:241"})}),"\n",(0,n.jsx)(l.hr,{}),"\n",(0,n.jsx)(l.h3,{id:"parse",children:"parse"}),"\n",(0,n.jsxs)(l.p,{children:["\u2022 ",(0,n.jsx)(l.code,{children:"Readonly"})," ",(0,n.jsx)(l.strong,{children:"parse"}),": (",(0,n.jsx)(l.code,{children:"value?"}),": ",(0,n.jsx)(l.code,{children:"unknown"}),") => ",(0,n.jsx)(l.code,{children:"V"})]}),"\n",(0,n.jsx)(l.p,{children:"The parse function from the StateValueConfig passed to createState"}),"\n",(0,n.jsx)(l.h4,{id:"type-declaration-1",children:"Type declaration"}),"\n",(0,n.jsxs)(l.p,{children:["\u25B8 (",(0,n.jsx)(l.code,{children:"value?"}),"): ",(0,n.jsx)(l.code,{children:"V"})]}),"\n",(0,n.jsx)(l.h5,{id:"parameters-2",children:"Parameters"}),"\n",(0,n.jsxs)(l.table,{children:[(0,n.jsx)(l.thead,{children:(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,n.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,n.jsx)(l.tbody,{children:(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.td,{style:{textAlign:"left"},children:(0,n.jsx)(l.code,{children:"value?"})}),(0,n.jsx)(l.td,{style:{textAlign:"left"},children:(0,n.jsx)(l.code,{children:"unknown"})})]})})]}),"\n",(0,n.jsx)(l.h5,{id:"returns-2",children:"Returns"}),"\n",(0,n.jsx)(l.p,{children:(0,n.jsx)(l.code,{children:"V"})}),"\n",(0,n.jsx)(l.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,n.jsx)(l.p,{children:(0,n.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/LexicalNodeState.ts#L243",children:"packages/lexical/src/LexicalNodeState.ts:243"})}),"\n",(0,n.jsx)(l.hr,{}),"\n",(0,n.jsx)(l.h3,{id:"unparse",children:"unparse"}),"\n",(0,n.jsxs)(l.p,{children:["\u2022 ",(0,n.jsx)(l.code,{children:"Readonly"})," ",(0,n.jsx)(l.strong,{children:"unparse"}),": (",(0,n.jsx)(l.code,{children:"value"}),": ",(0,n.jsx)(l.code,{children:"V"}),") => ",(0,n.jsx)(l.code,{children:"unknown"})]}),"\n",(0,n.jsx)(l.p,{children:"The unparse function from the StateValueConfig passed to createState,\nwith a default that is simply a pass-through that assumes the value is\nJSON serializable."}),"\n",(0,n.jsx)(l.h4,{id:"type-declaration-2",children:"Type declaration"}),"\n",(0,n.jsxs)(l.p,{children:["\u25B8 (",(0,n.jsx)(l.code,{children:"value"}),"): ",(0,n.jsx)(l.code,{children:"unknown"})]}),"\n",(0,n.jsx)(l.h5,{id:"parameters-3",children:"Parameters"}),"\n",(0,n.jsxs)(l.table,{children:[(0,n.jsx)(l.thead,{children:(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.th,{style:{textAlign:"left"},children:"Name"}),(0,n.jsx)(l.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,n.jsx)(l.tbody,{children:(0,n.jsxs)(l.tr,{children:[(0,n.jsx)(l.td,{style:{textAlign:"left"},children:(0,n.jsx)(l.code,{children:"value"})}),(0,n.jsx)(l.td,{style:{textAlign:"left"},children:(0,n.jsx)(l.code,{children:"V"})})]})})]}),"\n",(0,n.jsx)(l.h5,{id:"returns-3",children:"Returns"}),"\n",(0,n.jsx)(l.p,{children:(0,n.jsx)(l.code,{children:"unknown"})}),"\n",(0,n.jsx)(l.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,n.jsx)(l.p,{children:(0,n.jsx)(l.a,{href:"https://github.com/QubitPi/lexical/tree/main/packages/lexical/src/LexicalNodeState.ts#L249",children:"packages/lexical/src/LexicalNodeState.ts:249"})})]})}function x(e={}){let{wrapper:l}={...(0,s.a)(),...e.components};return l?(0,n.jsx)(l,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},22840:function(e,l,t){t.d(l,{Z:()=>r,a:()=>d});var i=t(2784);let n={},s=i.createContext(n);function d(e){let l=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(l):{...l,...e}},[l,e])}function r(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),i.createElement(s.Provider,{value:l},e.children)}}}]);